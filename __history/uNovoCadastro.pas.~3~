unit uNovoCadastro;

interface

uses
  InovoUsuario;

type
  Tusuario = class(TInterfacedObject, Iusuario)
    private
      Fnome : string;
      Fsobrenome: string;
      usuario : string;
      telefone : string;
      email : string;
      senha : string;
      confirmacao : string;

    public
    function nome(avalue : string) : Iusuario; overload;
    function sobrenome(avalue : string) : Iusuario; overload;
    function usuario(avalue : string) : Iusuario; overload;
    function telefone(avalue : string) : Iusuario; overload;
    function email(avalue : string) : Iusuario; overload;
    function senha(avalue : string) : Iusuario; overload;
    function confirmacao(avalue : string) : Iusuario; overload;


    function nome : string; overload;
    function sobrenome : string; overload;
    function usuario : string; overload;
    function telefone : string; overload;
    function email : string; overload;
    function senha : string; overload;
    function confirmacao : string; overload;
  end;

implementation

{ Tusuario }

function Tusuario.nome(avalue: string): Iusuario;
begin
  result := self;

  self.Fnome := avalue;

end;

function Tusuario.confirmacao(avalue: string): Iusuario;
begin

end;

function Tusuario.confirmacao: string;
begin

end;

function Tusuario.email: string;
begin

end;

function Tusuario.email(avalue: string): Iusuario;
begin

end;

function Tusuario.nome: string;
begin
  result := self.Fnome;

end;

function Tusuario.sobrenome(avalue: string): Iusuario;
begin
  result := self;

  self.Fsobrenome := avalue;

end;

function Tusuario.senha: string;
begin

end;

function Tusuario.senha(avalue: string): Iusuario;
begin

end;

function Tusuario.sobrenome: string;
begin
  result := self.Fsobrenome;

end;

function Tusuario.telefone: string;
begin

end;

function Tusuario.telefone(avalue: string): Iusuario;
begin

end;

function Tusuario.usuario(avalue: string): Iusuario;
begin

end;

function Tusuario.usuario: string;
begin

end;

end.
